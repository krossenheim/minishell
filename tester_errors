NOTES:
1 When doing "sleep 5 | sleep 1", we cant leave usign ctrl-d or ctrl-c because the signals are not reverted back to our 'default' while waiting on child processes
2 When doing "cat < not_existing_file", cat waits for input instead of not running. To signal this t_hell should not be executed I've set path to NULL.
3 Below are automated tests from the repo you shared with me.

Test  34: ❌  unset HELLO 
mini exit code = 1
bash exit code = 0
 Test  35: ❌  unset HELLO1 HELLO2 
mini exit code = 1
bash exit code = 0
 Test  36: ✅  unset HOME 
Test  37: ✅  unset PATH 
--
Test  40: ❌  cd $PWD hi 
mini exit code =
bash exit code = 1
mini error = ()
bash error = (bash: line 1: cd: too many arguments)
--
Test  50: ❌  exit hello 
mini exit code = 0
bash exit code = 2
mini error = ()
bash error = (bash: line 1: exit: hello: numeric argument required)
 Test  51: ❌  exit 42 world 
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = (bash: line 1: exit: too many arguments)
--
Test  64: ❌  cat <"1""2""3""4""5" 
mini exit code =
bash exit code = 1
mini error = (minishell: 12345: No such file or diretory)
bash error = (bash: line 1: 12345: No such file or directory)
 Test  65: ❌  echo <"./test_files/infile" <missing <"./test_files/infile" 
mini exit code = 0
bash exit code = 1
mini error = (minishell: missing: No such file or diretory)
bash error = (bash: line 1: missing: No such file or directory)
 Test  66: ❌  echo <missing <"./test_files/infile" <missing 
mini exit code = 0
bash exit code = 1
mini error = (minishell: missing: No such file or diretory minishell: missing: No such file or diretory)
bash error = (bash: line 1: missing: No such file or directory)
--
Test  76: ❌  cat <missing 
mini exit code =
bash exit code = 1
mini error = (minishell: missing: No such file or diretory)
bash error = (bash: line 1: missing: No such file or directory)
 Test  77: ❌  cat <missing | cat 
mini exit code =
bash exit code = 0
mini error = (minishell: missing: No such file or diretory)
bash error = (bash: line 1: missing: No such file or directory)
 Test  78: ❌  cat <missing | echo oi 
mini exit code = oi
bash exit code = 0
mini error = (minishell: missing: No such file or diretory)
bash error = (bash: line 1: missing: No such file or directory)
 Test  79: ❌  cat <missing | cat <"./test_files/infile" 
mini exit code = 42
bash exit code = 0
mini error = (minishell: missing: No such file or diretory)
bash error = (bash: line 1: missing: No such file or directory)
--
Test  85: ❌  ls >./outfiles/outfile01 >./test_files/invalid_permission 
 mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
--
Test  88: ❌  ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02" 
 Only in ./mini_outfiles: outfile02
mini outfiles:
bash_outfiles
bash.supp
--
 Test  89: ❌  ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission 
 Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files wildcards)
--
 Test  98: ❌  echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
 Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
--
 Test  99: ❌  echo hi | echo bye >./test_files/invalid_permission 
 mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
--
 Test 100: ❌  echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
 Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini output = (syntax error near unexpected token '>')
--
 Test 101: ❌  echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
 Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
--
 Test 102: ❌  cat <"./test_files/infile" >./test_files/invalid_permission 
 mini output = (hi hello world 42)
bash output = ()
mini exit code = 0
bash exit code = 1
--
 Test 103: ❌  cat >./test_files/invalid_permission <"./test_files/infile" 
 mini output = (hi hello world 42)
bash output = ()
mini exit code = 0
bash exit code = 1
--
 Test 104: ❌  cat <missing >./outfiles/outfile01 
 Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code =
--
 Test 105: ❌  cat >./outfiles/outfile01 <missing 
mini exit code =
bash exit code = 1
mini error = (minishell: missing: No such file or diretory)
bash error = (bash: line 1: missing: No such file or directory)
 Test 106: ❌  cat <missing >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = (minishell: missing: No such file or diretory No such file or no permissions)
bash error = (bash: line 1: missing: No such file or directory)
 Test 107: ❌  cat >./test_files/invalid_permission <missing 
mini exit code =
bash exit code = 1
mini error = (No such file or no permissions minishell: missing: No such file or diretory)
bash error = (bash: line 1: ./test_files/invalid_permission: Permission denied)
 Test 108: ❌  cat >./outfiles/outfile01 <missing >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = (minishell: missing: No such file or diretory No such file or no permissions)
bash error = (bash: line 1: missing: No such file or directory)
--
Test 115: ❌  ls >>./test_files/invalid_permission 
 mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
--
 Test 116: ❌  ls >>./test_files/invalid_permission >>./outfiles/outfile01 
 Only in ./mini_outfiles: outfile01
mini outfiles:
bash_outfiles
bash.supp
--
 Test 117: ❌  ls >>./outfiles/outfile01 >>./test_files/invalid_permission 
 mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
--
 Test 118: ❌  ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02 
 Only in ./mini_outfiles: outfile02
mini outfiles:
bash_outfiles
bash.supp
--
 Test 119: ❌  ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
 Only in ./mini_outfiles: outfile02
mini outfiles:
bash_outfiles
bash.supp
--
 Test 120: ❌  ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing 
 Only in ./mini_outfiles: outfile02
mini outfiles:
bash_outfiles
bash.supp
--
 Test 127: ❌  echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
 Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
--
 Test 128: ❌  echo hi | echo bye >>./test_files/invalid_permission 
 mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
--
 Test 129: ❌  echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
 mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
--
 Test 130: ❌  cat <minishell.h>./outfiles/outfile 
 Only in ./mini_outfiles: outfile
mini outfiles:
bash outfiles:
mini exit code =
--
 Test 131: ❌  cat <minishell.h|ls 
mini exit code = wildcards
bash exit code = 0
mini error = (minishell: minishell.h: No such file or diretory)
bash error = (bash: line 1: minishell.h: No such file or directory)
--
Test 133: ❌  $PWD 
 mini output = (/home/jose/projects/minishell/tester: command not found)
bash output = ()
mini exit code = 127
bash exit code = 126
--
 Test 134: ❌  $EMPTY 
 mini output = (: command not found)
bash output = ()
mini exit code = 127
bash exit code = 0
--
 Test 135: ❌  $EMPTY echo hi 
 mini output = (: command not found)
bash output = (hi)
mini exit code = 127
bash exit code = 0
--
 Test 136: ❌  ./test_files/invalid_permission 
mini exit code = 1
bash exit code = 126
mini error = ()
bash error = (bash: line 1: ./test_files/invalid_permission: Permission denied)
 Test 137: ❌  ./missing.out 
 mini output = (./missing.out: command not found)
bash output = ()
mini error = ()
bash error = (bash: line 1: ./missing.out: No such file or directory)
 Test 138: ❌  missing.out 
 mini output = (missing.out: command not found)
bash output = ()
mini error = ()
bash error = (bash: line 1: missing.out: command not found)
 Test 139: ❌  "aaa" 
 mini output = (aaa: command not found)
bash output = ()
mini error = ()
bash error = (bash: line 1: aaa: command not found)
 Test 140: ❌  test_files 
 mini output = (test_files: command not found)
bash output = ()
mini error = (minishell: test_files: Is a directory minishell: test_files: Is a directory)
bash error = (bash: line 1: test_files: command not found)
 Test 141: ❌  ./test_files 
 mini output = (./test_files: command not found)
bash output = ()
mini exit code = 127
bash exit code = 126
--
 Test 142: ❌  /test_files 
 mini output = (/test_files: command not found)
bash output = ()
mini error = ()
bash error = (bash: line 1: /test_files: No such file or directory)
 Test 143: ❌  minishell.h 
 mini output = (minishell.h: command not found)
bash output = ()
mini error = ()
bash error = (bash: line 1: minishell.h: command not found)
 Test 144: ❌  $ 
 mini output = ($: command not found)
bash output = ()
mini error = ()
bash error = (bash: line 1: $: command not found)
 Test 145: ❌  $? 
 mini output = (0: command not found)
bash output = ()
mini error = ()
bash error = (bash: line 1: 0: command not found)
 Test 146: ❌  README.md 
mini exit code = 1
bash exit code = 127
mini error = ()
bash error = (bash: line 1: README.md: command not found)
